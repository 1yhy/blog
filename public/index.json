[{"content":"\rHome/关于/《诛仙》\r","permalink":"http://localhost:1313/blog/me/jade-dynasty/","title":"《诛仙》"},{"content":"\rHome/关于/《剑来》\r","permalink":"http://localhost:1313/blog/me/sword/","title":"《剑来》"},{"content":"\rHome/关于/《仙逆》\r","permalink":"http://localhost:1313/blog/me/renegade-immortal/","title":"《仙逆》"},{"content":"\rHome/关于/《秦时明月》\r","permalink":"http://localhost:1313/blog/me/legend-of-qin/","title":"《秦时明月》"},{"content":"\rHome/关于/《天行九歌》\r","permalink":"http://localhost:1313/blog/me/nine-songs-of-the-sky/","title":"《天行九歌》"},{"content":"\r服务器部署一款开源的监控工具：Uptime Kuma\r前置条件：在服务器安装完成Docker\n创建安装目录 sudo -i\rmkdir -p /root/data/docker_data/uptime_kuma\r编辑docker-compose.yml文件 cd /root/data/docker_data/uptime_kuma\rvim docker-compose.yml\r# 输入安装脚本,以下版本为1.23.X版本，如需最新版本，需自行修改\rversion: '3.3'\rservices:\ruptime-kuma:\rimage: louislam/uptime-kuma:1\rcontainer_name: uptime-kuma\rvolumes:\r- ./uptime-kuma-data:/app/data\rports:\r- 3001:3001 # \u0026lt;Host Port\u0026gt;:\u0026lt;Container Port\u0026gt;\rrestart: always\r运行安装命令 docker compose up -d\r# 打开防火墙3001d\r输入http://服务器地址:3001 访问 ","permalink":"http://localhost:1313/blog/posts/uptime-kuma/","title":"CentOS7搭建Uptime Kuma，实时监控你的个人网站状态"},{"content":"\r自建Nginx Proxy Manager\r前置条件：在服务器安装完成Docker\n部署NPM\r创建安装NPM的目录，例如： sudo -i mkdir -p /root/data/docker_data/npm 编辑docker-compose.yml文件 cd /root/data/docker_data/npm vim docker-compose.yml # 输入安装脚本 version: '3' services: app: image: 'jc21/nginx-proxy-manager:latest' restart: unless-stopped ports: - '80:80' # 保持默认即可，不建议修改左侧的80 - '81:81' # 冒号左边可以改成自己服务器未被占用的端口 - '443:443' # 保持默认即可，不建议修改左侧的443 volumes: - ./data:/data # 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中 - ./letsencrypt:/etc/letsencrypt # 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 letsencrypt 文件夹中 # 记得打开服务器防火墙端口号 81，查看端口是否被占用（以 81 为例），输入： lsof -i:81 #查看 81 端口是否被占用，如果被占用，重新自定义一个端口 #如果啥也没出现，表示端口未被占用 安装NPM cd /root/data/docker_data/npm docker compose up -d 输入 http://ip:81 访问 默认登陆名和密码： Email: admin@example.com Password: changeme 更新 Nginx Proxy Manager\rcd /root/data/docker_data/npm docker compose down cp -r /root/data/docker_data/npm /root/data/docker_data/npm.archive #备份一份数据 docker compose pull docker compose up -d docker image prune # prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像 卸载 Nginx Proxy Manager\rcd /root/data/docker_data/npm docker compose down rm -rf /root/data/docker_data/npm Nginx Proxy Manager添加反向代理\rNginx Proxy Manager配置Https\r第一种：使用免费的证书服务 第二种：上传自己的证书，上传成功后到Hosts配置，即可看到自己上传的证书 如果需要配置https，点击SSL，选择证书和勾选需要的配置即可，不需要修改Proxy Hots里的http为https\n","permalink":"http://localhost:1313/blog/posts/nginx-proxy-management/","title":"部署Nginx Proxy Manager，一款开源的Nginx可视化应用"},{"content":"\rCentos7安装Docker\r如果之前有装过Docker,建议先卸载旧版本相关依赖 sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine 安装 # step 1: 安装必要的一些系统工具 sudo yum install -y yum-utils device-mapper-persistent-data lvm2 # Step 2: 添加软件源信息 sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo # Step 3: 更新并安装 Docker-CE sudo yum makecache fast sudo yum -y install docker-ce docker-ce-cli containerd.io # Step 4: 开启Docker服务并设置它在系统启动时自动启动 sudo systemctl start docker sudo systemctl enable docker # Step 5: 验证 Docker 是否安装成功并查看其版本 docker --version 安装完成后，最新版自带了docker compose命令，可以无需安装docker-compose 开启阿里云镜像加速（非必须） 进入阿里云控制台首页 进入管理控制台 -\u0026gt; 登录账号 -\u0026gt; 左上角控制台 -\u0026gt; 产品与服务 -\u0026gt; 容器 -\u0026gt; 容器镜像服务 -\u0026gt; 点击侧边栏镜像工具 -\u0026gt; 镜像加速器 -\u0026gt; 复制链接 编辑 daemon 配置文件vim /etc/docker/daemon.json替换加速器地址保存 { \u0026quot;registry-mirrors\u0026quot;: [\u0026quot;https://**********.mirror.aliyuncs.com\u0026quot;] } 重启 docker sudo systemctl daemon-reload sudo systemctl restart docker ","permalink":"http://localhost:1313/blog/posts/docker/","title":"CentOS7安装Docker"}]